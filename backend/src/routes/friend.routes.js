console.log("--- ‚ñ∂Ô∏è START: ≈Åadowanie pliku friend.routes.js ---");
const express = require('express');
const router = express.Router();
const friendController = require('../controllers/friend.controller');
// --- POCZƒÑTEK SPRAWDZANIA ---
console.log("--- üïµÔ∏è Sprawdzanie obiektu friendController ---");
console.log(friendController);
console.log("Czy funkcja 'getFriends' istnieje?:", typeof friendController.getFriends);
// --- KONIEC SPRAWDZANIA ---
const authenticate = require('../middleware/authenticate');

// Wszystkie route'y wymagajƒÖ uwierzytelnienia
router.use(authenticate);

// POST /api/friends/search - Wyszukaj u≈ºytkownika
router.post('/search', friendController.searchUser);

// POST /api/friends/request - Wy≈õlij zaproszenie
router.post('/request', friendController.sendFriendRequest);

// GET /api/friends - Pobierz listƒô znajomych
router.get('/', friendController.getFriends);

// GET /api/friends/requests/pending - Pobierz oczekujƒÖce zaproszenia
router.get('/requests/pending', friendController.getPendingRequests);

// GET /api/friends/requests/sent - Pobierz wys≈Çane zaproszenia
router.get('/requests/sent', friendController.getSentRequests);

// PUT /api/friends/requests/:requestId/accept - Zaakceptuj zaproszenie
router.put('/requests/:requestId/accept', friendController.acceptFriendRequest);

// PUT /api/friends/requests/:requestId/reject - Odrzuƒá zaproszenie
router.put('/requests/:requestId/reject', friendController.rejectFriendRequest);

// DELETE /api/friends/:friendId - Usu≈Ñ znajomego
router.delete('/:friendId', friendController.removeFriend);

// GET /api/friends/:friendId/interested - Pobierz polubione wydarzenia znajomego
router.get('/:friendId/interested', friendController.getFriendInterestedEvents);

console.log("--- ‚úÖ KONIEC: Pomy≈õlnie za≈Çadowano friend.routes.js ---");
module.exports = router;