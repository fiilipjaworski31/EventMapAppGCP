steps:
# Step 1: Build the Docker image for the backend
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', '${_REGION}-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/map-events-api:${_TAG}', './backend']
  id: 'Build Backend Image'

# Step 2: Push the image to Google Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', '${_REGION}-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/map-events-api:${_TAG}']
  id: 'Push Backend Image'

# Step 3: Deploy the new image version to Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/google-cloud-cli:slim'
  entrypoint: 'gcloud'
  args:
    - 'run'
    - 'deploy'
    - 'map-events-api'
    - '--image=${_REGION}-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/map-events-api:${_TAG}'
    - '--region'
    - '${_REGION}'
    - '--platform'
    - 'managed'
    - '--allow-unauthenticated'
    - '--service-account=ci-cd-service-account@${PROJECT_ID}.iam.gserviceaccount.com' # Konto usługi dla Cloud Run
    - '--add-cloudsql-instances=healthy-result-469611-e9:europe-central2:event-map-db' # Nazwa połączenia instancji Cloud SQL
  id: 'Deploy to Cloud Run' 

# Step 4: Install dependencies and build the front-end application
- name: 'gcr.io/cloud-builders/npm'
  args: ['install']
  dir: 'frontend'
  id: 'Install Frontend Dependencies'
- name: 'gcr.io/cloud-builders/npm'
  args: ['run', 'build']
  dir: 'frontend'
  id: 'Build Frontend'
  env:
    - 'VITE_GOOGLE_MAPS_API_KEY=${_VITE_GOOGLE_MAPS_API_KEY}'
    - 'VITE_GOOGLE_MAPS_ID=${_VITE_GOOGLE_MAPS_ID}'

# Step 5: Deploy the front end to Firebase Hosting
- name: 'node:18' # <-- CHANGE THIS LINE
  entrypoint: 'bash'
  args:
    - '-c'
    - 'npm install -g firebase-tools && firebase deploy --only hosting --project $PROJECT_ID --non-interactive'
  dir: 'frontend'
  id: 'Deploy to Firebase Hosting'

images:
- '${_REGION}-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/map-events-api:${_TAG}'

substitutions:
  _REGION: 'europe-central2'
  _TAG: 'latest'
  _VITE_GOOGLE_MAPS_API_KEY: ''
  _VITE_GOOGLE_MAPS_ID: ''

options:
  logging: CLOUD_LOGGING_ONLY